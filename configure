#!/bin/sh

set -ue

usage()
{
  echo "usage: $(basename "$0") [ --help ] [ --cxx=CXX ] [ --*flags=FLAGS ]"
  echo "      --help: Display this help"
  echo "       --cxx: Choose the compiler             (defaults to g++)"
  echo "  --cxxflags: Choose the compiler options     (defaults to -g)"
  echo "   --ldflags: Choose the linker options"
}

# quick and dirty reimplementation of the `realpath` program
realpath()
{
  cd "$1"
  echo "$PWD"
  cd - >/dev/null
}

root=$(dirname "$0")

for arg; do
  case "$arg" in
    --help)       usage;                          exit 0;;
    --cxx=*)      cxx="${arg#--cxx=}"             shift;;
    --cxxflags=*) cxxflags="${arg#--cxxflags=}";  shift;;
    --ldflags=*)  ldflags="${arg#--ldflags=}";    shift;;
    *)            usage;                          exit 1;;
  esac
done

(
  echo '# edit this...'
  echo "CXX			:= ${cc-g++}"
  echo "CXXFLAGS		:= ${cflags--g}"
  echo "LDFLAGS			:= ${ldflags-}"
  echo ''
  echo '# ...but not this'
  echo "ROOT			:= ${root}"
  echo "BUILDDIR		:= $PWD"
  echo ''
  echo '# used to keep configuration across calls to ./configure'
  echo '-include config.mk.local'
) >./config.mk

# create a "redirect" Makefile if we are building out of tree
if [ $(realpath "${root}") != $(realpath "$PWD") ]; then
  (
    echo "include		${root}/Makefile"
    echo "VPATH			:= ${root}"
  ) >./Makefile
fi
